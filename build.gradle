/*
 * Copyright 2015 Dan Luca. 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *  http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 * 
 * This is the bitchin' build file
 */

 import java.util.regex.Matcher
 import java.util.regex.Pattern
 
 import org.joda.time.DateTime
 import org.apache.tools.ant.filters.ReplaceTokens
 
 apply plugin: 'java'
 
 group = "com.caucho"
 ext.snapVersion = new DateTime().toString("yyyyMMddHHmm")
 ext.releaseMode = !project.version.endsWith("-SNAPSHOT")
 
 defaultTasks 'clean', 'assemble'
 
 buildDir = './build'
 
 sourceCompatibility='1.6'
 
 /**
  * Build Script dependencies
  */
 buildscript
 {
     repositories
     {
         mavenCentral()
     }
     dependencies
     {
         classpath "joda-time:joda-time:2.5"
     }
 }
 
 //~ Build ----------------------------------------------------------------------------------------
 repositories
 {
     mavenCentral();
 }
 
 dependencies
 {
     compile 'javax.servlet:servlet-api:2.4'
 }
 
 /**
  * Replace the version string into the main classes with the current value
  */
 afterEvaluate {
     def currentVersion = project.releaseMode?project.version:project.version.replace("-SNAPSHOT", "-${project.snapVersion}");
     configure(processResources) {
         //only include files subject to filtering, as otherwise the binary files (Office, etc) get corrupted
         filesMatching("*.properties") {
             filter(ReplaceTokens, tokens: [version:currentVersion])
         }
     }
 }
 
 assemble << {
     if (!project.releaseMode)
     {
         copy {
             from "$buildDir/libs"
             into "$buildDir/libs"
             include "$project.name-*"
             rename(/(.+)-(SNAPSHOT).jar/, "\$1-${project.snapVersion}.jar")
         }
     }
 }
 
 